version: '2'

services:

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: "/tmp/logs"

  kafka:
    image: wurstmeister/kafka:2.12-2.2.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      LOG_DIR: "/tmp/logs"

  kafdrop:
    image: obsidiandynamics/kafdrop
    depends_on:
      - kafka
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9093"
      JVM_OPTS: "-Xms32M -Xmx64M"
      SERVER_SERVLET_CONTEXTPATH: "/"

  prometheus:
    image: prom/prometheus:v2.8.0
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - '9090:9090'
    depends_on:
      - consumer

  grafana:
    image: grafana/grafana:6.6.1
    depends_on:
      - prometheus
    ports:
      - 3001:3000
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
  
  
  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.0.0
  #   environment:
  #     - discovery.type=single-node
  #   ports:
  #     - 9200:9200
  #     - 9201:9201
  # kibana:
  #   image: docker.elastic.co/kibana/kibana:7.0.0
  #   ports:
  #     - 5601:5601
  
  # infinispan:
  #   image: infinispan/server:10.0.0.Final-1
  #   ports:
  #     - 11222:11222
  #   command: "/opt/infinispan/bin/server.sh -c infinispan-demo.xml"
  #   volumes:
  #     - ./infinispan/infinispan.xml:/opt/infinispan/server/conf/infinispan-demo.xml:z
    
  mongo:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - 27017:27017
    volumes:
      - mongodb_data_container:/data/db

  producer:
    build: loanEligibilityApp/
    ports:
      - 1337:1337
    depends_on:
      - kafka

  consumer:
    build: kogito-consumer/
    ports:
      - 1336:1336
    depends_on:
      - kafka

  explanation-service:
    build: explanation-service/
    ports:
      - 1338:1338
    depends_on:
      - kafka

volumes:
  mongodb_data_container:
